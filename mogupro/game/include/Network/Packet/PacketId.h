#pragma once
#include <Network/NetworkDefines.h>
namespace Network
{
namespace Packet
{
enum class PacketId : ubyte2
{
    // 初期化用です。
    // 0で埋めているので、間違って呼ばれないように保険を掛けておきます。
    INVALID_NUMBER = 0U,

    //=========================================================//
    //                         Event                           //
    //=========================================================//
    // クライアント目線で書かれています。

    // <std::string>が送られてきました。
    EVE_STRING,
    // 他のプレイヤーや掘削機がフィールドのジェムを採ったと通知されました。
    EVE_GET_JEM,
    // 他のプレイヤーからジェムを奪ったと通知されました。
    EVE_PLAYER_ROB_JEM,

    //=========================================================//
    //                        Request                          //
    //=========================================================//
    // クライアント目線で書かれています。

    // <std::string>を送ります。
    REQ_STRING,
    // 他のプレイヤーの情報の更新を要求します。この時に自分のデータをパケットに乗せてください。
    REQ_PLAYER,
    // ワールドを生成するためのシード値を要求します。
    REQ_GET_JEM_SEED,
    // 現在持っているジェムの数をサーバーから取り寄せます。
    REQ_GET_JEM_POINT,
    // ジェムを取得したことを知らせます。プレイヤーと掘削機の両方、このパケットを使ってください。
    // ※このタイミングでは取得できません。サーバーからのレスポンスを待ってください。
    REQ_GET_JEM,
    // プレイヤーが他のプレイヤーのジェムを奪ったことを通知します。
    // ※このタイミングでは奪取できません。サーバーからのレスポンスを待ってください。
    REQ_PLAYER_ROB_JEM,
    // ブロックを破壊したと知らせます。
    // ※このタイミングでは破壊できません。サーバーからのレスポンスを待ってください。
    REQ_BREKE_BLOCKS,
    // 掘削機を設置したと知らせます。
    // ※このタイミングでは設置できません。サーバーからのレスポンスを待ってください。
    REQ_SET_QUARRY,

    //=========================================================//
    //                        Response                         //
    //=========================================================//
    // サーバー目線で書かれています。

    // <std::string>を送ります。
    RES_STRING,
    // 他のプレイヤーの位置情報を渡します。
    RES_PLAYER,
    // ワールドを生成するためのシード値を渡します。
    RES_GET_JEM_SEED,
    // プレイヤーが持っているジェムの数を渡します。
    RES_GET_JEM_POINT,
    // ジェムの取得が成功したか失敗したかについて通知します。
    RES_GET_JEM,
    // ジェムの奪取が成功したか失敗したかについて通知します。
    RES_PLAYER_ROB_JEM,
    // ブロック破壊が成功したか失敗したかについて通知します。
    RES_BREKE_BLOCKS,
    // 掘削機の設置が成功したか失敗したかについて通知します。
    RES_SET_QUARRY,
};
}
}
